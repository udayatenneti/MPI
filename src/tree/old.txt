array<double, 2> Tree::compute_force(const Cell * cell, const Body * b){

    /* if cell is non empty and we dont want to open it or it is leaf cell */
    if(cell->m != 0 and (!opening_criterion(cell, b->pos, b->pos) or cell->subcells[0] == nullptr)){
        if(cell->b->idx != b->idx){
            /* evaluate force */
            return eval_force(cell->rm, cell->m, b->pos, b->m);
        }
        /* is this really needed? */
        else{
            return {{0, 0}}; //should be the center of mass of the cell...
        }
    }

    /* accumulate force evaluation from subcells */
    array<double, 2> ftot = {{0, 0}};
    for(int i = 0; i < 4; i++){
        if(cell->subcells[i]!=nullptr){
            /* call force computation recursively */
            array<double, 2> f = compute_force(cell->subcells[i], b);

            /* accumulate */
            for(int c = 0; c < 2; c++){
                ftot[c] += f[c];
            }
        }
        else{
            break;
        }
    }
    return ftot;
}